declare void @memset(i32*  ,i32 ,i32 )
declare i32 @getch()
@c = dso_local global i32 0
@ii = dso_local global i32 1
@i = dso_local global i32 0
@chat = dso_local global i32 0
@intt = dso_local global i32 0
@ints =  dso_local global [10000 x i32] zeroinitializer
@chas =  dso_local global [10000 x i32] zeroinitializer
@get =  dso_local global [10000 x i32] zeroinitializer
@get2 =  dso_local global [10000 x i32] zeroinitializer
define dso_local i32  @main(){

	%1 = alloca i32

	%2 = alloca i32
	%3 = load i32, i32* @chat
	%4 = sub i32 %3, 1
	store i32 %4, i32* @chat
	%5 = load i32, i32* @chat
	%6 = add i32 %5, 1
	%7 = mul i32 %6, 1
	%8 = getelementptr [10000 x i32], [10000 x i32]* @chas, i32 0, i32 0
	%9 = getelementptr i32, i32* %8, i32 %7
	%10 = load i32, i32* %9
	store i32 %10, i32* %1
	store i32 %10, i32* @c
	%11 = load i32, i32* @ii
	%12 = mul i32 %11, 1
	%13 = getelementptr [10000 x i32], [10000 x i32]* @get2, i32 0, i32 0
	%14 = getelementptr i32, i32* %13, i32 %12
	store i32 32, i32* %14
	%15 = load i32, i32* @ii
	%16 = add i32 %15, 1
	%17 = mul i32 %16, 1
	%18 = getelementptr [10000 x i32], [10000 x i32]* @get2, i32 0, i32 0
	%19 = getelementptr i32, i32* %18, i32 %17
	%20 = load i32, i32* @c
	store i32 %20, i32* %19
	%21 = load i32, i32* @ii
	%22 = add i32 %21, 2
	store i32 %22, i32* @ii
	%23 = load i32, i32* @chat
	%24 =  icmp eq i32 %23, 0
	br i1 %24,label %25, label %26

25:	store i32 0, i32* %1
	br label %27

26:
	br label %27
27:
	store i32 1, i32* %1
	%28 =  icmp eq i32 1, 0
	br i1 %28,label %29, label %30

29:	store i32 1, i32* @chat
	br label %31

30:
	br label %31
31:
}
