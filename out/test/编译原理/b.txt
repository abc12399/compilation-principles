declare void @memset(i32*  ,i32 ,i32 )
declare void @putch(i32)
declare i32 @getch()
declare i32 @getint()
@ptr = dso_local global i32 0
@tape =  dso_local global [65536 x i32] zeroinitializer
@program =  dso_local global [32768 x i32] zeroinitializer
define dso_local i32 @main(){
	%1 = alloca i32
	store i32 0, i32* %1
	%2 = alloca i32
	%3 = call i32 @getint()
	store i32 %3, i32* %2
	br label %4
4:
	%5 = load i32, i32* %1
	%6 = load i32, i32* %2
	%7 =  icmp slt i32 %5, %6
	br i1 %7,label %8, label %16

8:
	%9 = load i32, i32* %1
	%10 = mul i32 %9, 1
	%11 = getelementptr [32768 x i32], [32768 x i32]* @program, i32 0, i32 0
	%12 = getelementptr i32, i32* %11, i32 %10
	%13 = call i32 @getch()
	store i32 %13, i32* %12
	%14 = load i32, i32* %1
	%15 = add i32 %14, 1
	store i32 %15, i32* %1
	br label %4
16:
	%17 = load i32, i32* %1
	%18 = mul i32 %17, 1
	%19 = getelementptr i32, i32* %11, i32 %18
	store i32 0, i32* %19
	%20 = alloca i32
	%21 = alloca i32
	store i32 0, i32* %1
	br label %22
22:
	%23 = load i32, i32* %1
	%24 = mul i32 %23, 1
	%25 = getelementptr i32, i32* %11, i32 %24
	%26 = load i32, i32* %25
	%27 = icmp ne i32 %26, 0
	br i1 %27,label %28, label %130

28:
	%29 = load i32, i32* %1
	%30 = mul i32 %29, 1
	%31 = getelementptr i32, i32* %11, i32 %30
	%32 = load i32, i32* %31
	store i32 %32, i32* %20
	%33 = load i32, i32* %20
	%34 =  icmp eq i32 %33, 62
	br i1 %34,label %35, label %38

35:
	%36 = load i32, i32* @ptr
	%37 = add i32 %36, 1
	store i32 %37, i32* @ptr
	br label %127

38:
	%39 = load i32, i32* %20
	%40 =  icmp eq i32 %39, 60
	br i1 %40,label %41, label %44

41:
	%42 = load i32, i32* @ptr
	%43 = sub i32 %42, 1
	store i32 %43, i32* @ptr
	br label %126

44:
	%45 = load i32, i32* %20
	%46 =  icmp eq i32 %45, 43
	br i1 %46,label %47, label %57

47:
	%48 = load i32, i32* @ptr
	%49 = mul i32 %48, 1
	%50 = getelementptr [65536 x i32], [65536 x i32]* @tape, i32 0, i32 0
	%51 = getelementptr i32, i32* %50, i32 %49
	%52 = load i32, i32* @ptr
	%53 = mul i32 %52, 1
	%54 = getelementptr i32, i32* %50, i32 %53
	%55 = load i32, i32* %54
	%56 = add i32 %55, 1
	store i32 %56, i32* %51
	br label %125

57:
	%58 = load i32, i32* %20
	%59 =  icmp eq i32 %58, 45
	br i1 %59,label %60, label %69

60:
	%61 = load i32, i32* @ptr
	%62 = mul i32 %61, 1
	%63 = getelementptr i32, i32* %50, i32 %62
	%64 = load i32, i32* @ptr
	%65 = mul i32 %64, 1
	%66 = getelementptr i32, i32* %50, i32 %65
	%67 = load i32, i32* %66
	%68 = sub i32 %67, 1
	store i32 %68, i32* %63
	br label %124

69:
	%70 = load i32, i32* %20
	%71 =  icmp eq i32 %70, 46
	br i1 %71,label %72, label %77

72:
	%73 = load i32, i32* @ptr
	%74 = mul i32 %73, 1
	%75 = getelementptr i32, i32* %50, i32 %74
	%76 = load i32, i32* %75
	call void @putch(i32 %76)
	br label %123

77:
	%78 = load i32, i32* %20
	%79 =  icmp eq i32 %78, 44
	br i1 %79,label %80, label %85

80:
	%81 = load i32, i32* @ptr
	%82 = mul i32 %81, 1
	%83 = getelementptr i32, i32* %50, i32 %82
	%84 = call i32 @getch()
	store i32 %84, i32* %83
	br label %122

85:
	%86 = load i32, i32* %20
	%87 =  icmp eq i32 %86, 93
	%88 = load i32, i32* @ptr
	%89 = mul i32 %88, 1
	%90 = getelementptr i32, i32* %50, i32 %89
	%91 = load i32, i32* %90
	%92 = icmp ne i32 %91, 0
	%93 =  and i1 %87, %92
	br i1 %93,label %94, label %120

94:
	store i32 1, i32* %21
	br label %95
95:
	%96 = load i32, i32* %21
	%97 =  icmp sgt i32 %96, 0
	br i1 %97,label %98, label %119

98:
	%99 = load i32, i32* %1
	%100 = sub i32 %99, 1
	store i32 %100, i32* %1
	%101 = load i32, i32* %1
	%102 = mul i32 %101, 1
	%103 = getelementptr i32, i32* %11, i32 %102
	%104 = load i32, i32* %103
	store i32 %104, i32* %20
	%105 = load i32, i32* %20
	%106 =  icmp eq i32 %105, 91
	br i1 %106,label %107, label %110

107:
	%108 = load i32, i32* %21
	%109 = sub i32 %108, 1
	store i32 %109, i32* %21
	br label %118

110:
	%111 = load i32, i32* %20
	%112 =  icmp eq i32 %111, 93
	br i1 %112,label %113, label %116

113:
	%114 = load i32, i32* %21
	%115 = add i32 %114, 1
	store i32 %115, i32* %21
	br label %117

116:
	br label %117
117:
	br label %118
118:
	br label %95
119:
	br label %121

120:
	br label %121
121:
	br label %122
122:
	br label %123
123:
	br label %124
124:
	br label %125
125:
	br label %126
126:
	br label %127
127:
	%128 = load i32, i32* %1
	%129 = add i32 %128, 1
	store i32 %129, i32* %1
	br label %22
130:
	ret i32 0
}