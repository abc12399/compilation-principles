declare void @memset(i32*  ,i32 ,i32 )
declare void @putch(i32)
declare void @putint(i32)
@a =  dso_local global [8 x i32] [i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0]
@b =  dso_local const [8 x i32] [i32 9,i32 2,i32 3,i32 4,i32 1,i32 5,i32 4,i32 0]
@c =  dso_local global [8 x i32] [i32 1,i32 2,i32 3,i32 4,i32 6,i32 3,i32 7,i32 8]
@e =  dso_local global [8 x i32] [i32 6,i32 7,i32 4,i32 5,i32 5,i32 6,i32 9,i32 10]
define dso_local i32 @main(){
	%1 = mul i32 2, 2
	%2 = add i32 1, %1
	%3 = getelementptr [8 x i32], [8 x i32]* @e, i32 0, i32 %2
	%4 = load i32, i32* %3
	%5 = mul i32 0, 2
	%6 = add i32 1, %5
	%7 = getelementptr [8 x i32], [8 x i32]* @e, i32 0, i32 %6
	%8 = load i32, i32* %7
	%9 = add i32 %4, %8
	%10 = mul i32 0, 2
	%11 = add i32 0, %10
	%12 = getelementptr [8 x i32], [8 x i32]* @e, i32 0, i32 %11
	%13 = load i32, i32* %12
	%14 = sub i32 %9, %13
	%15 = mul i32 2, 2
	%16 = add i32 0, %15
	%17 = getelementptr [8 x i32], [8 x i32]* @a, i32 0, i32 %16
	%18 = load i32, i32* %17
	%19 = add i32 %14, %18
	call void @putint(i32 %19)
	%20 = alloca [8 x i32]
	%21 = getelementptr [8 x i32], [8 x i32]* %20, i32 0, i32 0
	call void @memset(i32* %21, i32 0, i32 32)
	%22 = alloca [8 x i32]
	%23 = getelementptr [8 x i32], [8 x i32]* %22, i32 0, i32 0
	call void @memset(i32* %23, i32 0, i32 32)
	%24 = getelementptr i32, i32* %23, i32 0
	store i32 1, i32* %24
	%25 = getelementptr i32, i32* %23, i32 1
	store i32 2, i32* %25
	%26 = getelementptr i32, i32* %23, i32 2
	store i32 3, i32* %26
	%27 = getelementptr i32, i32* %23, i32 3
	store i32 4, i32* %27
	%28 = getelementptr i32, i32* %23, i32 4
	store i32 5, i32* %28
	%29 = getelementptr i32, i32* %23, i32 5
	store i32 6, i32* %29
	%30 = getelementptr i32, i32* %23, i32 6
	store i32 7, i32* %30
	%31 = getelementptr i32, i32* %23, i32 7
	store i32 8, i32* %31
	%32 = alloca [8 x i32]
	%33 = getelementptr [8 x i32], [8 x i32]* %32, i32 0, i32 0
	call void @memset(i32* %33, i32 0, i32 32)
	%34 = getelementptr i32, i32* %33, i32 0
	store i32 1, i32* %34
	%35 = getelementptr i32, i32* %33, i32 1
	store i32 2, i32* %35
	%36 = getelementptr i32, i32* %33, i32 2
	store i32 3, i32* %36
	%37 = getelementptr i32, i32* %33, i32 3
	store i32 4, i32* %37
	%38 = getelementptr i32, i32* %33, i32 4
	store i32 5, i32* %38
	%39 = getelementptr i32, i32* %33, i32 5
	store i32 6, i32* %39
	%40 = getelementptr i32, i32* %33, i32 6
	store i32 7, i32* %40
	%41 = getelementptr i32, i32* %33, i32 7
	store i32 8, i32* %41
	call void @putch(i32 10)
	%42 = alloca [8 x i32]
	%43 = getelementptr [8 x i32], [8 x i32]* %42, i32 0, i32 0
	call void @memset(i32* %43, i32 0, i32 32)
	%44 = mul i32 6, 1
	%45 = getelementptr [8 x i32], [8 x i32]* %23, i32 0, i32 %44
	%46 = load i32, i32* %45
	%47 = getelementptr i32, i32* %43, i32 0
	store i32 %46, i32* %47
	%48 = mul i32 7, 1
	%49 = getelementptr [8 x i32], [8 x i32]* %23, i32 0, i32 %48
	%50 = load i32, i32* %49
	%51 = getelementptr i32, i32* %43, i32 1
	store i32 %50, i32* %51
	%52 = getelementptr i32, i32* %43, i32 2
	store i32 3, i32* %52
	%53 = getelementptr i32, i32* %43, i32 3
	store i32 4, i32* %53
	%54 = getelementptr i32, i32* %43, i32 4
	store i32 5, i32* %54
	%55 = getelementptr i32, i32* %43, i32 5
	store i32 6, i32* %55
	%56 = getelementptr i32, i32* %43, i32 6
	store i32 7, i32* %56
	%57 = getelementptr i32, i32* %43, i32 7
	store i32 8, i32* %57
	%58 = mul i32 3, 2
	%59 = add i32 1, %58
	%60 = getelementptr [8 x i32], [8 x i32]* %43, i32 0, i32 %59
	%61 = load i32, i32* %60
	%62 = mul i32 0, 2
	%63 = add i32 0, %62
	%64 = getelementptr [8 x i32], [8 x i32]* %43, i32 0, i32 %63
	%65 = load i32, i32* %64
	%66 = add i32 %61, %65
	%67 = mul i32 0, 2
	%68 = add i32 1, %67
	%69 = getelementptr [8 x i32], [8 x i32]* %43, i32 0, i32 %68
	%70 = load i32, i32* %69
	%71 = add i32 %66, %70
	%72 = mul i32 2, 2
	%73 = add i32 0, %72
	%74 = getelementptr [8 x i32], [8 x i32]* %21, i32 0, i32 %73
	%75 = load i32, i32* %74
	%76 = add i32 %71, %75
	call void @putint(i32 %76)
	ret i32 0
}