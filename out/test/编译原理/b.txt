declare void @memset(i32*  ,i32 ,i32 )
declare void @putch(i32)
declare void @putint(i32)
declare i32 @getint()
@n = dso_local global i32 0
@array =  dso_local global [110 x i32] zeroinitializer
define dso_local void @init(i32 %0){
	%2 = alloca i32
	store i32 %0, i32* %2

	%3 = alloca i32
	store i32 1, i32* %3
	br label %4
4:
	%5 = load i32, i32* %3
	%6 = load i32, i32* %2
	%7 = load i32, i32* %2
	%8 = mul i32 %6, %7
	%9 = add i32 %8, 1
	%10 =  icmp sle i32 %5, %9
	br i1 %10,label %11, label %19

11:
	%12 = load i32, i32* %3
	%13 = mul i32 %12, 1
	%14 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%15 = getelementptr i32, i32* %14, i32 %13
	%16 = sub i32 0, 1
	store i32 %16, i32* %15
	%17 = load i32, i32* %3
	%18 = add i32 %17, 1
	store i32 %18, i32* %3
	br label %4
19:
	ret void
}
define dso_local i32 @findfa(i32 %0){
	%2 = alloca i32
	store i32 %0, i32* %2

	%3 = load i32, i32* %2
	%4 = mul i32 %3, 1
	%5 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%6 = getelementptr i32, i32* %5, i32 %4
	%7 = load i32, i32* %6
	%8 = load i32, i32* %2
	%9 =  icmp eq i32 %7, %8
	br i1 %9,label %10, label %12

10:	%11 = load i32, i32* %2
	ret i32 %11

12:
	%13 = load i32, i32* %2
	%14 = mul i32 %13, 1
	%15 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%16 = getelementptr i32, i32* %15, i32 %14
	%17 = load i32, i32* %2
	%18 = mul i32 %17, 1
	%19 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%20 = getelementptr i32, i32* %19, i32 %18
	%21 = load i32, i32* %20
	%22 = call i32 @findfa(i32 %21)
	store i32 %22, i32* %16
	%23 = load i32, i32* %2
	%24 = mul i32 %23, 1
	%25 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%26 = getelementptr i32, i32* %25, i32 %24
	%27 = load i32, i32* %26
	ret i32 %27

}
define dso_local void @mmerge(i32 %0,i32 %1){
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32
	store i32 %1, i32* %4

	%5 = alloca i32
	%6 = load i32, i32* %3
	%7 = call i32 @findfa(i32 %6)
	store i32 %7, i32* %5
	%8 = alloca i32
	%9 = load i32, i32* %4
	%10 = call i32 @findfa(i32 %9)
	store i32 %10, i32* %8
	%11 = load i32, i32* %5
	%12 = load i32, i32* %8
	%13 =  icmp ne i32 %11, %12
	br i1 %13,label %14, label %20

14:	%15 = load i32, i32* %5
	%16 = mul i32 %15, 1
	%17 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%18 = getelementptr i32, i32* %17, i32 %16
	%19 = load i32, i32* %8
	store i32 %19, i32* %18
	br label %21

20:
	br label %21
21:
	ret void
}
define dso_local i32 @main(){

	%1 = alloca i32
	%2 = alloca i32
	%3 = alloca i32
	%4 = alloca i32
	store i32 1, i32* %1
	br label %5
5:
	%6 = load i32, i32* %1
	%7 = icmp ne i32 %6, 0
	br i1 %7,label %8, label %186

8:
	%9 = load i32, i32* %1
	%10 = sub i32 %9, 1
	store i32 %10, i32* %1
	store i32 4, i32* @n
	store i32 10, i32* %2
	%11 = alloca i32
	store i32 0, i32* %11
	%12 = alloca i32
	store i32 0, i32* %12
	%13 = load i32, i32* @n
	call void @init(i32 %13)
	%14 = alloca i32
	%15 = load i32, i32* @n
	%16 = load i32, i32* @n
	%17 = mul i32 %15, %16
	%18 = add i32 %17, 1
	store i32 %18, i32* %14
	br label %19
19:
	%20 = load i32, i32* %11
	%21 = load i32, i32* %2
	%22 =  icmp slt i32 %20, %21
	br i1 %22,label %23, label %176

23:
	%24 = call i32 @getint()
	store i32 %24, i32* %3
	%25 = call i32 @getint()
	store i32 %25, i32* %4
	%26 = load i32, i32* %12
	%27 = icmp eq i32 %26, 0
	%28 = zext i1 %27 to i32
	%29 = add i32 0, %28
	%30 = icmp ne i32 %29, 0
	br i1 %30,label %31, label %172

31:
	%32 = alloca i32
	%33 = load i32, i32* @n
	%34 = load i32, i32* %3
	%35 = sub i32 %34, 1
	%36 = mul i32 %33, %35
	%37 = load i32, i32* %4
	%38 = add i32 %36, %37
	store i32 %38, i32* %32
	%39 = load i32, i32* %32
	%40 = mul i32 %39, 1
	%41 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%42 = getelementptr i32, i32* %41, i32 %40
	%43 = load i32, i32* %32
	store i32 %43, i32* %42
	%44 = load i32, i32* %3
	%45 =  icmp eq i32 %44, 1
	br i1 %45,label %46, label %51

46:
	%47 = mul i32 0, 1
	%48 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%49 = getelementptr i32, i32* %48, i32 %47
	store i32 0, i32* %49
	%50 = load i32, i32* %32
	call void @mmerge(i32 %50, i32 0)
	br label %52

51:
	br label %52
52:
	%53 = load i32, i32* %3
	%54 = load i32, i32* @n
	%55 =  icmp eq i32 %53, %54
	br i1 %55,label %56, label %64

56:
	%57 = load i32, i32* %14
	%58 = mul i32 %57, 1
	%59 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%60 = getelementptr i32, i32* %59, i32 %58
	%61 = load i32, i32* %14
	store i32 %61, i32* %60
	%62 = load i32, i32* %32
	%63 = load i32, i32* %14
	call void @mmerge(i32 %62, i32 %63)
	br label %65

64:
	br label %65
65:
	%66 = load i32, i32* %4
	%67 = load i32, i32* @n
	%68 =  icmp slt i32 %66, %67
	br i1 %68, label %69, label 83
69:
	%70 = load i32, i32* %32
	%71 = add i32 %70, 1
	%72 = mul i32 %71, 1
	%73 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%74 = getelementptr i32, i32* %73, i32 %72
	%75 = load i32, i32* %74
	%76 = sub i32 0, 1
	%77 =  icmp ne i32 %75, %76
	%78 =  and i1 %69, %77
	br i1 %78,label %79, label %83

79:
	%80 = load i32, i32* %32
	%81 = load i32, i32* %32
	%82 = add i32 %81, 1
	call void @mmerge(i32 %80, i32 %82)
	br label %84

83:
	br label %84
84:
	%85 = load i32, i32* %4
	%86 =  icmp sgt i32 %85, 1
	br i1 %86, label %87, label 101
87:
	%88 = load i32, i32* %32
	%89 = sub i32 %88, 1
	%90 = mul i32 %89, 1
	%91 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%92 = getelementptr i32, i32* %91, i32 %90
	%93 = load i32, i32* %92
	%94 = sub i32 0, 1
	%95 =  icmp ne i32 %93, %94
	%96 =  and i1 %87, %95
	br i1 %96,label %97, label %101

97:
	%98 = load i32, i32* %32
	%99 = load i32, i32* %32
	%100 = sub i32 %99, 1
	call void @mmerge(i32 %98, i32 %100)
	br label %102

101:
	br label %102
102:
	%103 = load i32, i32* %3
	%104 = load i32, i32* @n
	%105 =  icmp slt i32 %103, %104
	br i1 %105, label %106, label 122
106:
	%107 = load i32, i32* %32
	%108 = load i32, i32* @n
	%109 = add i32 %107, %108
	%110 = mul i32 %109, 1
	%111 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%112 = getelementptr i32, i32* %111, i32 %110
	%113 = load i32, i32* %112
	%114 = sub i32 0, 1
	%115 =  icmp ne i32 %113, %114
	%116 =  and i1 %106, %115
	br i1 %116,label %117, label %122

117:
	%118 = load i32, i32* %32
	%119 = load i32, i32* %32
	%120 = load i32, i32* @n
	%121 = add i32 %119, %120
	call void @mmerge(i32 %118, i32 %121)
	br label %123

122:
	br label %123
123:
	%124 = load i32, i32* %3
	%125 =  icmp sgt i32 %124, 1
	br i1 %125, label %126, label 142
126:
	%127 = load i32, i32* %32
	%128 = load i32, i32* @n
	%129 = sub i32 %127, %128
	%130 = mul i32 %129, 1
	%131 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%132 = getelementptr i32, i32* %131, i32 %130
	%133 = load i32, i32* %132
	%134 = sub i32 0, 1
	%135 =  icmp ne i32 %133, %134
	%136 =  and i1 %126, %135
	br i1 %136,label %137, label %142

137:
	%138 = load i32, i32* %32
	%139 = load i32, i32* %32
	%140 = load i32, i32* @n
	%141 = sub i32 %139, %140
	call void @mmerge(i32 %138, i32 %141)
	br label %143

142:
	br label %143
143:
	%144 = mul i32 0, 1
	%145 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%146 = getelementptr i32, i32* %145, i32 %144
	%147 = load i32, i32* %146
	%148 = sub i32 0, 1
	%149 =  icmp ne i32 %147, %148
	br i1 %149, label %150, label 170
150:
	%151 = load i32, i32* %14
	%152 = mul i32 %151, 1
	%153 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
	%154 = getelementptr i32, i32* %153, i32 %152
	%155 = load i32, i32* %154
	%156 = sub i32 0, 1
	%157 =  icmp ne i32 %155, %156
	%158 =  and i1 %150, %157
	br i1 %158, label %159, label 170
159:
	%160 = call i32 @findfa(i32 0)
	%161 = load i32, i32* %14
	%162 = call i32 @findfa(i32 %161)
	%163 =  icmp eq i32 %160, %162
	%164 =  and i1 %159, %163
	br i1 %164,label %165, label %170

165:
	store i32 1, i32* %12
	%166 = alloca i32
	%167 = load i32, i32* %11
	%168 = add i32 %167, 1
	store i32 %168, i32* %166
	%169 = load i32, i32* %166
	call void @putint(i32 %169)
	call void @putch(i32 10)
	br label %171

170:
	br label %171
171:
	br label %173

172:
	br label %173
173:
	%174 = load i32, i32* %11
	%175 = add i32 %174, 1
	store i32 %175, i32* %11
	br label %19
176:
	%177 = load i32, i32* %12
	%178 = icmp eq i32 %177, 0
	%179 = zext i1 %178 to i32
	%180 = add i32 0, %179
	%181 = icmp ne i32 %180, 0
	br i1 %181,label %182, label %184

182:
	%183 = sub i32 0, 1
	call void @putint(i32 %183)
	call void @putch(i32 10)
	br label %185

184:
	br label %185
185:
	br label %5
186:
	ret i32 0
}
