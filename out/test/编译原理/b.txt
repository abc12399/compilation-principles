declare void @memset(i32*  ,i32 ,i32 )
declare void @putarray(i32, i32*)
declare void @getarray(i32*)
@n = dso_local global i32 0
define dso_local i32 @swap(i32* %0,i32 %1,i32 %2){
	%4 = alloca i32*
	store i32* %0, i32* * %4
	%5 = load i32* , i32* * %4
	%6 = alloca i32
	store i32 %1, i32* %6
	%7 = alloca i32
	store i32 %2, i32* %7

	%8 = alloca i32
	%9 = load i32, i32* %6
	%10 = mul i32 %9, 0
	%11 = getelementptr i32, i32* %5, i32 %10
	%12 = load i32, i32* %11
	store i32 %12, i32* %8
	%13 = load i32, i32* %6
	%14 = mul i32 %13, 0
	%15 = getelementptr i32, i32* %5, i32 %14
	%16 = load i32, i32* %7
	%17 = mul i32 %16, 0
	%18 = getelementptr i32, i32* %5, i32 %17
	%19 = load i32, i32* %18
	store i32 %19, i32* %15
	%20 = load i32, i32* %7
	%21 = mul i32 %20, 0
	%22 = getelementptr i32, i32* %5, i32 %21
	%23 = load i32, i32* %8
	store i32 %23, i32* %22
	ret i32 0
}
define dso_local i32 @heap_ajust(i32* %0,i32 %1,i32 %2){
	%4 = alloca i32*
	store i32* %0, i32* * %4
	%5 = load i32* , i32* * %4
	%6 = alloca i32
	store i32 %1, i32* %6
	%7 = alloca i32
	store i32 %2, i32* %7

	%8 = alloca i32
	%9 = load i32, i32* %6
	store i32 %9, i32* %8
	%10 = alloca i32
	%11 = load i32, i32* %8
	%12 = mul i32 %11, 2
	%13 = add i32 %12, 1
	store i32 %13, i32* %10
	br label %14
14:
	%15 = load i32, i32* %10
	%16 = load i32, i32* %7
	%17 = add i32 %16, 1
	%18 =  icmp slt i32 %15, %17
	br i1 %18,label %19, label %59

19:
	%20 = load i32, i32* %10
	%21 = load i32, i32* %7
	%22 =  icmp slt i32 %20, %21
	%23 = load i32, i32* %10
	%24 = mul i32 %23, 0
	%25 = getelementptr i32, i32* %5, i32 %24
	%26 = load i32, i32* %25
	%27 = load i32, i32* %10
	%28 = add i32 %27, 1
	%29 = mul i32 %28, 0
	%30 = getelementptr i32, i32* %5, i32 %29
	%31 = load i32, i32* %30
	%32 =  icmp slt i32 %26, %31
	%33 =  and i1 %22, %32
	br i1 %33,label %34, label %37

34:	%35 = load i32, i32* %10
	%36 = add i32 %35, 1
	store i32 %36, i32* %10
	br label %38

37:
	br label %38
38:
	%39 = load i32, i32* %8
	%40 = mul i32 %39, 0
	%41 = getelementptr i32, i32* %5, i32 %40
	%42 = load i32, i32* %41
	%43 = load i32, i32* %10
	%44 = mul i32 %43, 0
	%45 = getelementptr i32, i32* %5, i32 %44
	%46 = load i32, i32* %45
	%47 =  icmp sgt i32 %42, %46
	br i1 %47,label %48, label %49

48:	ret i32 0

49:
	%50 = getelementptr i32, i32* %5, i32 0
	%51 = load i32, i32* %8
	%52 = load i32, i32* %10
	%53 = call i32 @swap(i32* %50, i32 %51, i32 %52)
	store i32 %53, i32* %8
	%54 = load i32, i32* %10
	store i32 %54, i32* %8
	%55 = load i32, i32* %8
	%56 = mul i32 %55, 2
	%57 = add i32 %56, 1
	store i32 %57, i32* %10
	br label %58
58:
	br label %14
59:
	ret i32 0
}
define dso_local i32 @heap_sort(i32* %0,i32 %1){
	%3 = alloca i32*
	store i32* %0, i32* * %3
	%4 = load i32* , i32* * %3
	%5 = alloca i32
	store i32 %1, i32* %5

	%6 = alloca i32
	%7 = alloca i32
	%8 = load i32, i32* %5
	%9 = sdiv i32 %8, 2
	%10 = sub i32 %9, 1
	store i32 %10, i32* %6
	br label %11
11:
	%12 = load i32, i32* %6
	%13 = sub i32 0, 1
	%14 =  icmp sgt i32 %12, %13
	br i1 %14,label %15, label %24

15:
	%16 = load i32, i32* %5
	%17 = sub i32 %16, 1
	store i32 %17, i32* %7
	%18 = getelementptr i32, i32* %4, i32 0
	%19 = load i32, i32* %6
	%20 = load i32, i32* %7
	%21 = call i32 @heap_ajust(i32* %18, i32 %19, i32 %20)
	store i32 %21, i32* %7
	%22 = load i32, i32* %6
	%23 = sub i32 %22, 1
	store i32 %23, i32* %6
	br label %11
24:
	%25 = load i32, i32* %5
	%26 = sub i32 %25, 1
	store i32 %26, i32* %6
	br label %27
27:
	%28 = load i32, i32* %6
	%29 =  icmp sgt i32 %28, 0
	br i1 %29,label %30, label %44

30:
	%31 = alloca i32
	store i32 0, i32* %31
	%32 = getelementptr i32, i32* %4, i32 0
	%33 = load i32, i32* %31
	%34 = load i32, i32* %6
	%35 = call i32 @swap(i32* %32, i32 %33, i32 %34)
	store i32 %35, i32* %7
	%36 = load i32, i32* %6
	%37 = sub i32 %36, 1
	store i32 %37, i32* %7
	%38 = getelementptr i32, i32* %4, i32 0
	%39 = load i32, i32* %31
	%40 = load i32, i32* %7
	%41 = call i32 @heap_ajust(i32* %38, i32 %39, i32 %40)
	store i32 %41, i32* %7
	%42 = load i32, i32* %6
	%43 = sub i32 %42, 1
	store i32 %43, i32* %6
	br label %27
44:
	ret i32 0
}
define dso_local i32 @main(){

	%1 = alloca [10 x i32]
	%2 = getelementptr [10 x i32], [10 x i32]* %1, i32 0, i32 0
	call void @memset(i32* %2, i32 0, i32 40)
	%3 = call i32 @getarray(i32* %2)
	store i32 %3, i32* @n
	%4 = alloca i32
	store i32 0, i32* %4
	%5 = getelementptr i32, i32* %2, i32 0
	%6 = load i32, i32* @n
	%7 = call i32 @heap_sort(i32* %5, i32 %6)
	store i32 %7, i32* %4
	%8 = load i32, i32* @n
	%9 = getelementptr i32, i32* %2, i32 0
	call void @heap_sort(i32 %8, i32*%9)
	ret i32 0
}
