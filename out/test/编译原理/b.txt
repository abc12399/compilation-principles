declare void @memset(i32*  ,i32 ,i32 )
declare void @putch(i32)
declare void @putint(i32)
@a =  dso_local global [8 x i32] [i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0]
@b =  dso_local constant [8 x i32] [i32 9,i32 2,i32 3,i32 4,i32 1,i32 5,i32 4,i32 0]
@c =  dso_local global [8 x i32] [i32 1,i32 2,i32 3,i32 4,i32 6,i32 3,i32 7,i32 8]
@e =  dso_local global [8 x i32] [i32 6,i32 7,i32 4,i32 5,i32 5,i32 6,i32 9,i32 10]
define dso_local i32 @main(){
	%1 = mul i32 2, 2
	%2 = add i32 1, %1
	%3 = getelementptr [8 x i32], [8 x i32]* @e, i32 0, i32 0
	%4 = getelementptr i32, i32* %3, i32 %2
	%5 = load i32, i32* %4
	%6 = mul i32 0, 2
	%7 = add i32 1, %6
	%8 = getelementptr i32, i32* %3, i32 %7
	%9 = load i32, i32* %8
	%10 = add i32 %5, %9
	%11 = mul i32 0, 2
	%12 = add i32 0, %11
	%13 = getelementptr i32, i32* %3, i32 %12
	%14 = load i32, i32* %13
	%15 = sub i32 %10, %14
	%16 = mul i32 2, 2
	%17 = add i32 0, %16
	%18 = getelementptr i32, i32* @a, i32 %17
	%19 = load i32, i32* %18
	%20 = add i32 %15, %19
	call void @putint(i32 %20)
	%21 = alloca [8 x i32]
	%22 = getelementptr [8 x i32], [8 x i32]* %22, i32 0, i32 0
	call void @memset(i32* %22, i32 0, i32 32)
	%23 = alloca [8 x i32]
	%24 = getelementptr [8 x i32], [8 x i32]* %24, i32 0, i32 0
	call void @memset(i32* %24, i32 0, i32 32)
	%25 = getelementptr i32, i32* %24, i32 0
	store i32 1, i32* %25
	%26 = getelementptr i32, i32* %24, i32 1
	store i32 2, i32* %26
	%27 = getelementptr i32, i32* %24, i32 2
	store i32 3, i32* %27
	%28 = getelementptr i32, i32* %24, i32 3
	store i32 4, i32* %28
	%29 = getelementptr i32, i32* %24, i32 4
	store i32 5, i32* %29
	%30 = getelementptr i32, i32* %24, i32 5
	store i32 6, i32* %30
	%31 = getelementptr i32, i32* %24, i32 6
	store i32 7, i32* %31
	%32 = getelementptr i32, i32* %24, i32 7
	store i32 8, i32* %32
	%33 = alloca [8 x i32]
	%34 = getelementptr [8 x i32], [8 x i32]* %34, i32 0, i32 0
	call void @memset(i32* %34, i32 0, i32 32)
	%35 = getelementptr i32, i32* %34, i32 0
	store i32 1, i32* %35
	%36 = getelementptr i32, i32* %34, i32 1
	store i32 2, i32* %36
	%37 = getelementptr i32, i32* %34, i32 2
	store i32 3, i32* %37
	%38 = getelementptr i32, i32* %34, i32 3
	store i32 4, i32* %38
	%39 = getelementptr i32, i32* %34, i32 4
	store i32 5, i32* %39
	%40 = getelementptr i32, i32* %34, i32 5
	store i32 6, i32* %40
	%41 = getelementptr i32, i32* %34, i32 6
	store i32 7, i32* %41
	%42 = getelementptr i32, i32* %34, i32 7
	store i32 8, i32* %42
	call void @putch(i32 10)
	%43 = alloca [8 x i32]
	%44 = getelementptr [8 x i32], [8 x i32]* %44, i32 0, i32 0
	call void @memset(i32* %44, i32 0, i32 32)
	%45 = mul i32 6, 1
	%46 = getelementptr i32, i32* %24, i32 %45
	%47 = load i32, i32* %46
	%48 = getelementptr i32, i32* %44, i32 0
	store i32 %47, i32* %48
	%49 = mul i32 7, 1
	%50 = getelementptr i32, i32* %24, i32 %49
	%51 = load i32, i32* %50
	%52 = getelementptr i32, i32* %44, i32 1
	store i32 %51, i32* %52
	%53 = getelementptr i32, i32* %44, i32 2
	store i32 3, i32* %53
	%54 = getelementptr i32, i32* %44, i32 3
	store i32 4, i32* %54
	%55 = getelementptr i32, i32* %44, i32 4
	store i32 5, i32* %55
	%56 = getelementptr i32, i32* %44, i32 5
	store i32 6, i32* %56
	%57 = getelementptr i32, i32* %44, i32 6
	store i32 7, i32* %57
	%58 = getelementptr i32, i32* %44, i32 7
	store i32 8, i32* %58
	%59 = mul i32 3, 2
	%60 = add i32 1, %59
	%61 = getelementptr i32, i32* %44, i32 %60
	%62 = load i32, i32* %61
	%63 = mul i32 0, 2
	%64 = add i32 0, %63
	%65 = getelementptr i32, i32* %44, i32 %64
	%66 = load i32, i32* %65
	%67 = add i32 %62, %66
	%68 = mul i32 0, 2
	%69 = add i32 1, %68
	%70 = getelementptr i32, i32* %44, i32 %69
	%71 = load i32, i32* %70
	%72 = add i32 %67, %71
	%73 = mul i32 2, 2
	%74 = add i32 0, %73
	%75 = getelementptr i32, i32* %22, i32 %74
	%76 = load i32, i32* %75
	%77 = add i32 %72, %76
	call void @putint(i32 %77)
	ret i32 0
}