declare void @memset(i32*  ,i32 ,i32 )
declare void @putch(i32)
declare void @putint(i32)
@a =  dso_local global [8 x i32] [i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0]
@b =  dso_local constant [8 x i32] [i32 9,i32 2,i32 3,i32 4,i32 1,i32 5,i32 4,i32 0]
@c =  dso_local global [8 x i32] [i32 1,i32 2,i32 3,i32 4,i32 6,i32 3,i32 7,i32 8]
@e =  dso_local global [8 x i32] [i32 6,i32 7,i32 4,i32 5,i32 5,i32 6,i32 9,i32 10]
define dso_local i32 @main(){
	%1 = mul i32 2, 2
	%2 = add i32 1, %1
	%3 = getelementptr [8 x i32], [8 x i32]* %@e, i32 0, i32 0
	%4 = getelementptr i32, i32* @e, i32 %4
	%6 = load i32, i32* %4
	%7 = mul i32 0, 2
	%8 = add i32 1, %7
	%9 = getelementptr i32, i32* @e, i32 %9
	%11 = load i32, i32* %9
	%12 = add i32 %6, %11
	%13 = mul i32 0, 2
	%14 = add i32 0, %13
	%15 = getelementptr i32, i32* @e, i32 %15
	%17 = load i32, i32* %15
	%18 = sub i32 %12, %17
	%19 = mul i32 2, 2
	%20 = add i32 0, %19
	%21 = getelementptr i32, i32* @a, i32 %21
	%23 = load i32, i32* %21
	%24 = add i32 %18, %23
	call void @putint(i32 %24)
	%25 = alloca [8 x i32]
	%26 = getelementptr [8 x i32], [8 x i32]* %26, i32 0, i32 0
	call void @memset(i32* %26, i32 0, i32 32)
	%27 = alloca [8 x i32]
	%28 = getelementptr [8 x i32], [8 x i32]* %28, i32 0, i32 0
	call void @memset(i32* %28, i32 0, i32 32)
	%29 = getelementptr i32, i32* %28, i32 0
	store i32 1, i32* %29
	%30 = getelementptr i32, i32* %28, i32 1
	store i32 2, i32* %30
	%31 = getelementptr i32, i32* %28, i32 2
	store i32 3, i32* %31
	%32 = getelementptr i32, i32* %28, i32 3
	store i32 4, i32* %32
	%33 = getelementptr i32, i32* %28, i32 4
	store i32 5, i32* %33
	%34 = getelementptr i32, i32* %28, i32 5
	store i32 6, i32* %34
	%35 = getelementptr i32, i32* %28, i32 6
	store i32 7, i32* %35
	%36 = getelementptr i32, i32* %28, i32 7
	store i32 8, i32* %36
	%37 = alloca [8 x i32]
	%38 = getelementptr [8 x i32], [8 x i32]* %38, i32 0, i32 0
	call void @memset(i32* %38, i32 0, i32 32)
	%39 = getelementptr i32, i32* %38, i32 0
	store i32 1, i32* %39
	%40 = getelementptr i32, i32* %38, i32 1
	store i32 2, i32* %40
	%41 = getelementptr i32, i32* %38, i32 2
	store i32 3, i32* %41
	%42 = getelementptr i32, i32* %38, i32 3
	store i32 4, i32* %42
	%43 = getelementptr i32, i32* %38, i32 4
	store i32 5, i32* %43
	%44 = getelementptr i32, i32* %38, i32 5
	store i32 6, i32* %44
	%45 = getelementptr i32, i32* %38, i32 6
	store i32 7, i32* %45
	%46 = getelementptr i32, i32* %38, i32 7
	store i32 8, i32* %46
	call void @putch(i32 10)
	%47 = alloca [8 x i32]
	%48 = getelementptr [8 x i32], [8 x i32]* %48, i32 0, i32 0
	call void @memset(i32* %48, i32 0, i32 32)
	%49 = mul i32 6, 1
	%50 = getelementptr i32, i32* %28, i32 %50
	%52 = load i32, i32* %50
	%53 = getelementptr i32, i32* %48, i32 0
	store i32 %52, i32* %53
	%54 = mul i32 7, 1
	%55 = getelementptr i32, i32* %28, i32 %55
	%57 = load i32, i32* %55
	%58 = getelementptr i32, i32* %48, i32 1
	store i32 %57, i32* %58
	%59 = getelementptr i32, i32* %48, i32 2
	store i32 3, i32* %59
	%60 = getelementptr i32, i32* %48, i32 3
	store i32 4, i32* %60
	%61 = getelementptr i32, i32* %48, i32 4
	store i32 5, i32* %61
	%62 = getelementptr i32, i32* %48, i32 5
	store i32 6, i32* %62
	%63 = getelementptr i32, i32* %48, i32 6
	store i32 7, i32* %63
	%64 = getelementptr i32, i32* %48, i32 7
	store i32 8, i32* %64
	%65 = mul i32 3, 2
	%66 = add i32 1, %65
	%67 = getelementptr i32, i32* %48, i32 %67
	%69 = load i32, i32* %67
	%70 = mul i32 0, 2
	%71 = add i32 0, %70
	%72 = getelementptr i32, i32* %48, i32 %72
	%74 = load i32, i32* %72
	%75 = add i32 %69, %74
	%76 = mul i32 0, 2
	%77 = add i32 1, %76
	%78 = getelementptr i32, i32* %48, i32 %78
	%80 = load i32, i32* %78
	%81 = add i32 %75, %80
	%82 = mul i32 2, 2
	%83 = add i32 0, %82
	%84 = getelementptr i32, i32* %26, i32 %84
	%86 = load i32, i32* %84
	%87 = add i32 %81, %86
	call void @putint(i32 %87)
	ret i32 0
}