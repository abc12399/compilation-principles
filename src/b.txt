declare void @memset(i32*  ,i32 ,i32 )
declare void @putch(i32)
declare void @putint(i32)
@a =  dso_local global [8 x i32] [i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0]
@b =  dso_local constant [8 x i32] [i32 9,i32 2,i32 3,i32 4,i32 1,i32 5,i32 4,i32 0]
@c =  dso_local global [8 x i32] [i32 1,i32 2,i32 3,i32 4,i32 6,i32 3,i32 7,i32 8]
@e =  dso_local global [8 x i32] [i32 6,i32 7,i32 4,i32 5,i32 5,i32 6,i32 9,i32 10]
define dso_local i32 @main(){
	%1 = mul i32 2, 2
	%2 = add i32 1, %1
	%3 = getelementptr [8 x i32], [8 x i32]* @e, i32 0, i32 0
	%4 = getelementptr i32, i32* %3, i32 %2
	%5 = load i32, i32* %4
	%6 = mul i32 0, 2
	%7 = add i32 1, %6
	%8 = getelementptr i32, i32* %3, i32 %7
	%9 = load i32, i32* %8
	%10 = add i32 %5, %9
	%11 = mul i32 0, 2
	%12 = add i32 0, %11
	%13 = getelementptr i32, i32* %3, i32 %12
	%14 = load i32, i32* %13
	%15 = sub i32 %10, %14
	%16 = mul i32 2, 2
	%17 = add i32 0, %16
	%18 = getelementptr [8 x i32], [8 x i32]* @a, i32 0, i32 0
	%19 = getelementptr i32, i32* %18, i32 %17
	%20 = load i32, i32* %19
	%21 = add i32 %15, %20
	call void @putint(i32 %21)
	%22 = alloca [8 x i32]
	%23 = getelementptr [8 x i32], [8 x i32]* %23, i32 0, i32 0
	call void @memset(i32* %23, i32 0, i32 32)
	%24 = alloca [8 x i32]
	%25 = getelementptr [8 x i32], [8 x i32]* %25, i32 0, i32 0
	call void @memset(i32* %25, i32 0, i32 32)
	%26 = getelementptr i32, i32* %25, i32 0
	store i32 1, i32* %26
	%27 = getelementptr i32, i32* %25, i32 1
	store i32 2, i32* %27
	%28 = getelementptr i32, i32* %25, i32 2
	store i32 3, i32* %28
	%29 = getelementptr i32, i32* %25, i32 3
	store i32 4, i32* %29
	%30 = getelementptr i32, i32* %25, i32 4
	store i32 5, i32* %30
	%31 = getelementptr i32, i32* %25, i32 5
	store i32 6, i32* %31
	%32 = getelementptr i32, i32* %25, i32 6
	store i32 7, i32* %32
	%33 = getelementptr i32, i32* %25, i32 7
	store i32 8, i32* %33
	%34 = alloca [8 x i32]
	%35 = getelementptr [8 x i32], [8 x i32]* %35, i32 0, i32 0
	call void @memset(i32* %35, i32 0, i32 32)
	%36 = getelementptr i32, i32* %35, i32 0
	store i32 1, i32* %36
	%37 = getelementptr i32, i32* %35, i32 1
	store i32 2, i32* %37
	%38 = getelementptr i32, i32* %35, i32 2
	store i32 3, i32* %38
	%39 = getelementptr i32, i32* %35, i32 3
	store i32 4, i32* %39
	%40 = getelementptr i32, i32* %35, i32 4
	store i32 5, i32* %40
	%41 = getelementptr i32, i32* %35, i32 5
	store i32 6, i32* %41
	%42 = getelementptr i32, i32* %35, i32 6
	store i32 7, i32* %42
	%43 = getelementptr i32, i32* %35, i32 7
	store i32 8, i32* %43
	call void @putch(i32 10)
	%44 = alloca [8 x i32]
	%45 = getelementptr [8 x i32], [8 x i32]* %45, i32 0, i32 0
	call void @memset(i32* %45, i32 0, i32 32)
	%46 = mul i32 6, 1
	%47 = getelementptr i32, i32* %25, i32 %46
	%48 = load i32, i32* %47
	%49 = getelementptr i32, i32* %45, i32 0
	store i32 %48, i32* %49
	%50 = mul i32 7, 1
	%51 = getelementptr i32, i32* %25, i32 %50
	%52 = load i32, i32* %51
	%53 = getelementptr i32, i32* %45, i32 1
	store i32 %52, i32* %53
	%54 = getelementptr i32, i32* %45, i32 2
	store i32 3, i32* %54
	%55 = getelementptr i32, i32* %45, i32 3
	store i32 4, i32* %55
	%56 = getelementptr i32, i32* %45, i32 4
	store i32 5, i32* %56
	%57 = getelementptr i32, i32* %45, i32 5
	store i32 6, i32* %57
	%58 = getelementptr i32, i32* %45, i32 6
	store i32 7, i32* %58
	%59 = getelementptr i32, i32* %45, i32 7
	store i32 8, i32* %59
	%60 = mul i32 3, 2
	%61 = add i32 1, %60
	%62 = getelementptr i32, i32* %45, i32 %61
	%63 = load i32, i32* %62
	%64 = mul i32 0, 2
	%65 = add i32 0, %64
	%66 = getelementptr i32, i32* %45, i32 %65
	%67 = load i32, i32* %66
	%68 = add i32 %63, %67
	%69 = mul i32 0, 2
	%70 = add i32 1, %69
	%71 = getelementptr i32, i32* %45, i32 %70
	%72 = load i32, i32* %71
	%73 = add i32 %68, %72
	%74 = mul i32 2, 2
	%75 = add i32 0, %74
	%76 = getelementptr i32, i32* %23, i32 %75
	%77 = load i32, i32* %76
	%78 = add i32 %73, %77
	call void @putint(i32 %78)
	ret i32 0
}