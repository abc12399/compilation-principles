declare void @memset(i32*  ,i32 ,i32 )
declare void @putint(i32)
@a = dso_local global i32 0
@return = dso_local global i32 0
define dso_local i32  @main(){
	%1 = alloca i32
	store i32 10, i32* @a
	%2 = alloca [5 x i32]
	%3 = getelementptr [5 x i32], [5 x i32]* %2, i32 0, i32 0
	call void @memset(i32* %3, i32 0, i32 20)
	%4 = getelementptr i32, i32* %3, i32 0
	store i32 1, i32* %4
	%5 = getelementptr i32, i32* %3, i32 1
	store i32 2, i32* %5
	%6 = getelementptr i32, i32* %3, i32 2
	store i32 3, i32* %6
	%7 = getelementptr i32, i32* %3, i32 3
	store i32 4, i32* %7
	%8 = getelementptr i32, i32* %3, i32 4
	store i32 10, i32* %8
	%9 = mul i32 4, 1
	%10 = getelementptr i32, i32* %3, i32 %9
	%11 = load i32, i32* %10
	%12 = alloca i32
	store i32 %11, i32* %12
	%13 = load i32, i32* %12
	%14 = sub i32 %13, 1
	store i32 %14, i32* %12
	%15 = load i32, i32* %12
	store i32 %15, i32* @return
	br label %16
16:
	%17 = load i32 , i32 * @return
	store i32 %17, i32* %1
	%18 = load i32, i32* %1
	call void @putint(i32 %18)
	ret i32 0
}
