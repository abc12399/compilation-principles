declare void @memset(i32*  ,i32 ,i32 )
declare void @putint(i32)
declare i32 @getint()
@field =  dso_local global [2 x i32] zeroinitializer
define dso_local i32 @main(){
	%1 = alloca [1 x i32]
	%2 = getelementptr [1 x i32], [1 x i32]* %1, i32 0, i32 0
	call void @memset(i32* %2, i32 0, i32 4)
	%3 = alloca [3 x i32]
	%4 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 0
	call void @memset(i32* %4, i32 0, i32 12)
	%5 = alloca i32
	%6 = mul i32 0, 1
	%7 = getelementptr [2 x i32], [2 x i32]* @field, i32 0, i32 %6
	%8 = call i32 @getint()
	store i32 %8, i32* %7
	%9 = mul i32 1, 1
	%10 = getelementptr [2 x i32], [2 x i32]* @field, i32 0, i32 %9
	%11 = call i32 @getint()
	store i32 %11, i32* %10
	%12 = add i32 0, 0
	%13 = load i32, i32* %12
	%14 = mul i32 %13, 1
	%15 = getelementptr [3 x i32], [3 x i32]* %4, i32 0, i32 %14
	%16 = sub i32 0, 1
	store i32 %16, i32* %15
	%17 = mul i32 1, 1
	%18 = getelementptr [3 x i32], [3 x i32]* %4, i32 0, i32 %17
	%19 = mul i32 0, 1
	%20 = getelementptr [3 x i32], [3 x i32]* %4, i32 0, i32 %19
	%21 = load i32, i32* %20
	%22 = sub i32 %21, 2
	store i32 %22, i32* %18
	%23 = mul i32 1, 1
	%24 = getelementptr [3 x i32], [3 x i32]* %4, i32 0, i32 %23
	%25 = load i32, i32* %24
	store i32 %25, i32* %5
	%26 = mul i32 2, 1
	%27 = getelementptr [3 x i32], [3 x i32]* %4, i32 0, i32 %26
	store i32 16, i32* %27
	%28 = mul i32 0, 1
	%29 = getelementptr [2 x i32], [2 x i32]* @field, i32 0, i32 %28
	%30 = load i32, i32* %29
	%31 = sub i32 3, %30
	%32 = load i32, i32* %31
	%33 = mul i32 %32, 1
	%34 = getelementptr [3 x i32], [3 x i32]* %4, i32 0, i32 %33
	%35 = load i32, i32* %34
	%36 = add i32 %35, 2
	%37 = load i32, i32* %5
	%38 = add i32 %36, %37
	call void @putint(i32 %38)
	ret i32 0
}