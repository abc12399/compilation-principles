declare void @memset(i32*  ,i32 ,i32 )
declare void @putarray(i32, i32*)
declare void @getarray(i32*)
@n = dso_local global i32 0
define dso_local i32 @swap(i32* %0,i32 %1,i32 %2){
	%4 = alloca i32*
	store i32* %0, i32* * %4
	%5 = load i32* , i32* * %4
	%6 = alloca i32
	store i32 %1, i32* %6
	%7 = alloca i32
	store i32 %2, i32* %7

	%9 = alloca i32
	%10 = load i32, i32* %6
	%11 = mul i32 %10, 0
	%12 = getelementptr i32, i32* %5, i32 %11
	%13 = load i32, i32* %12
	store i32 %13, i32* %9
	%14 = load i32, i32* %6
	%15 = mul i32 %14, 0
	%16 = getelementptr i32, i32* %5, i32 %15
	%17 = load i32, i32* %7
	%18 = mul i32 %17, 0
	%19 = getelementptr i32, i32* %5, i32 %18
	%20 = load i32, i32* %19
	store i32 %20, i32* %16
	%21 = load i32, i32* %7
	%22 = mul i32 %21, 0
	%23 = getelementptr i32, i32* %5, i32 %22
	%24 = load i32, i32* %9
	store i32 %24, i32* %23
	ret i32 0
}
define dso_local i32 @heap_ajust(i32* %0,i32 %1,i32 %2){
	%4 = alloca i32*
	store i32* %0, i32* * %4
	%5 = load i32* , i32* * %4
	%6 = alloca i32
	store i32 %1, i32* %6
	%7 = alloca i32
	store i32 %2, i32* %7

	%9 = alloca i32
	%10 = load i32, i32* %6
	store i32 %10, i32* %9
	%11 = alloca i32
	%12 = load i32, i32* %9
	%13 = mul i32 %12, 2
	%14 = add i32 %13, 1
	store i32 %14, i32* %11
	br label %15
15:
	%16 = load i32, i32* %11
	%17 = load i32, i32* %7
	%18 = add i32 %17, 1
	%19 =  icmp slt i32 %16, %18
	br i1 %19,label %20, label %60

20:
	%21 = load i32, i32* %11
	%22 = load i32, i32* %7
	%23 =  icmp slt i32 %21, %22
	%24 = load i32, i32* %11
	%25 = mul i32 %24, 0
	%26 = getelementptr i32, i32* %5, i32 %25
	%27 = load i32, i32* %26
	%28 = load i32, i32* %11
	%29 = add i32 %28, 1
	%30 = mul i32 %29, 0
	%31 = getelementptr i32, i32* %5, i32 %30
	%32 = load i32, i32* %31
	%33 =  icmp slt i32 %27, %32
	%34 =  and i1 %23, %33
	br i1 %34,label %35, label %38

35:	%36 = load i32, i32* %11
	%37 = add i32 %36, 1
	store i32 %37, i32* %11
	br label %39

38:
	br label %39
39:
	%40 = load i32, i32* %9
	%41 = mul i32 %40, 0
	%42 = getelementptr i32, i32* %5, i32 %41
	%43 = load i32, i32* %42
	%44 = load i32, i32* %11
	%45 = mul i32 %44, 0
	%46 = getelementptr i32, i32* %5, i32 %45
	%47 = load i32, i32* %46
	%48 =  icmp sgt i32 %43, %47
	br i1 %48,label %49, label %50

49:	ret i32 0

50:
	%51 = getelementptr i32, i32* %5, i32 0
	%52 = load i32, i32* %9
	%53 = load i32, i32* %11
	%54 = call i32 @swap(i32* %51, i32 %52, i32 %53)
	store i32 %54, i32* %9
	%55 = load i32, i32* %11
	store i32 %55, i32* %9
	%56 = load i32, i32* %9
	%57 = mul i32 %56, 2
	%58 = add i32 %57, 1
	store i32 %58, i32* %11
	br label %59
59:
60:
	ret i32 0
}
define dso_local i32 @heap_sort(i32* %0,i32 %1){
	%3 = alloca i32*
	store i32* %0, i32* * %3
	%4 = load i32* , i32* * %3
	%5 = alloca i32
	store i32 %1, i32* %5

	%7 = alloca i32
	%8 = alloca i32
	%9 = load i32, i32* %5
	%10 = sdiv i32 %9, 2
	%11 = sub i32 %10, 1
	store i32 %11, i32* %7
	br label %12
12:
	%13 = load i32, i32* %7
	%14 = sub i32 0, 1
	%15 =  icmp sgt i32 %13, %14
	br i1 %15,label %16, label %25

16:
	%17 = load i32, i32* %5
	%18 = sub i32 %17, 1
	store i32 %18, i32* %8
	%19 = getelementptr i32, i32* %4, i32 0
	%20 = load i32, i32* %7
	%21 = load i32, i32* %8
	%22 = call i32 @heap_ajust(i32* %19, i32 %20, i32 %21)
	store i32 %22, i32* %8
	%23 = load i32, i32* %7
	%24 = sub i32 %23, 1
	store i32 %24, i32* %7
	br label %12
25:
	%26 = load i32, i32* %5
	%27 = sub i32 %26, 1
	store i32 %27, i32* %7
	br label %28
28:
	%29 = load i32, i32* %7
	%30 =  icmp sgt i32 %29, 0
	br i1 %30,label %31, label %45

31:
	%32 = alloca i32
	store i32 0, i32* %32
	%33 = getelementptr i32, i32* %4, i32 0
	%34 = load i32, i32* %32
	%35 = load i32, i32* %7
	%36 = call i32 @swap(i32* %33, i32 %34, i32 %35)
	store i32 %36, i32* %8
	%37 = load i32, i32* %7
	%38 = sub i32 %37, 1
	store i32 %38, i32* %8
	%39 = getelementptr i32, i32* %4, i32 0
	%40 = load i32, i32* %32
	%41 = load i32, i32* %8
	%42 = call i32 @heap_ajust(i32* %39, i32 %40, i32 %41)
	store i32 %42, i32* %8
	%43 = load i32, i32* %7
	%44 = sub i32 %43, 1
	store i32 %44, i32* %7
	br label %28
45:
	ret i32 0
}
define dso_local i32 @main(){

	%1 = alloca [10 x i32]
	%2 = getelementptr [10 x i32], [10 x i32]* %1, i32 0, i32 0
	call void @memset(i32* %2, i32 0, i32 40)
	%3 = call i32 @getarray(i32* %2)
	store i32 %3, i32* @n
	%4 = alloca i32
	store i32 0, i32* %4
	%5 = getelementptr i32, i32* %2, i32 0
	%6 = load i32, i32* @n
	%7 = call i32 @heap_sort(i32* %5, i32 %6)
	store i32 %7, i32* %4
	%8 = load i32, i32* @n
	%9 = getelementptr i32, i32* %2, i32 0
	call void @heap_sort(i32 %8, i32*%9)
	ret i32 0
}
